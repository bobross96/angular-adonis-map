<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title></title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css' rel='stylesheet' />
    <style>
      body {
        margin: 0;
        padding: 0;
      }

      img {
        height :150px;
        width : 200px
      }

      #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
      }

        .marker {
        background-image: url('https://i.pinimg.com/236x/fd/80/ec/fd80ecec48eba2a9adb76e4133905879.jpg');
        background-size: cover;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        cursor: pointer;
        }

        .mapboxgl-popup {
        max-width: 200px;
        }

        .mapboxgl-popup-content {
        text-align: center;
        font-family: 'Open Sans', sans-serif;
        }
    </style>
</head>
<body>

<div id='map'></div>

<script>

mapboxgl.accessToken = 'pk.eyJ1IjoiemFkdXN6IiwiYSI6ImNrNWU1Mmh0czIzZjIzZnAzZnF2cmJqYWsifQ._rR2JHRYwApl8bjwR2KY7w';

var map = new mapboxgl.Map({
  container: 'map',
  style: 'mapbox://styles/mapbox/light-v10',
  center: [  103.89152856863825,1.3214594906655606],
  zoom: 14
});

//async function to call backend api and populate the map with data
async function populate(){

 const response = await fetch('http://127.0.0.1:3333/api/locations/');
 const geojson = await response.json()
 console.log(geojson.data)

 //const realgeojson = geojson.data 
 return geojson.data;
}

//only after marker data has been obtained, start placing markers
populate().then((response) => {
   // console.log(realgeojson)
    response.forEach(function(marker) {

        // create a HTML element for each feature
        var el = document.createElement('div');
        el.className = 'marker';
      


        // make a marker for each feature and add to the map
        new mapboxgl.Marker(el)
  .setLngLat(marker.geometry.coordinates)
  .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
    .setHTML('<h3>' + marker.properties.name + '</h3><p> Description : ' + marker.properties.description +  '<br> Current weather : ' + marker.properties.weather + '</p>' +'<img src=' + marker.properties.url + ' alt="W3Schools.com"> '))
  .addTo(map);
        
})
    });

</script>

</body>
</html>